#!/bin/bash

#
# Params
#

opt="$1"
shift

#
# Helper functions
#

function panic() {
    local msg="$*"
    echo "$msg"
    exit 1
}

function assert_is_function() {
    local name="$1"
    if [[ "$(type -t "$name")" != "function" ]]; then
        panic "function $name doesn't exists?"
    fi
}

#
# Prepare config
# Config format: key=value
# Available:
# * mode=<mode>
#   - [required] set the mode
#

# change to root dir firstly
cd "$(dirname "${BASH_SOURCE[0]}")" ||
    panic "script dir does not exist?"

# special handle for opt "set", set first
if [[ "$opt" == "set" ]]; then
    # TODO: verify; override
    echo "$*" >> .config
    # exit quickly
    exit 0
fi

if [[ -f .config ]]; then
    # shellcheck disable=SC1091
    # https://github.com/koalaman/shellcheck/wiki/SC1091
    source .config
fi

if [[ ! $mode ]]; then
    echo "set mode first using '$0 set mode=<mode>'"
    echo "available modes: $(ls mode/ | tr '\n' ' ')"
    panic "mode not set?"
fi

# mode set properly, continue change to mode dir
cd "mode/$mode" ||
    panic "mode $mode doesn't exists?"
if [[ -f "hook" ]]; then
    # shellcheck disable=SC1091
    source "hook"
else
    panic "$mode's hook doesn't exists?"
fi

#
# Handling opt
#

case "$opt" in
    "start")
        # Start services
        assert_is_function "on_start"
        on_start "$@"
    ;;
    "stop")
        # Stop services
        assert_is_function "on_stop"
        on_stop "$@"
    ;;
    *)
        # What?
        echo "usage $0 <opt...>"
        echo "available opts: start stop upgrade"
        panic "unknown opt $opt?"
    ;;
esac

exit $?
